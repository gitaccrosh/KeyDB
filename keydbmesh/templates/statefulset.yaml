apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "multiactive.fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "multiactive.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  serviceName: {{ include "multiactive.fullname" . }}-headless
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "multiactive.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: keydb
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["keydb-server", "/etc/keydb/keydb.conf"]
          ports:
            - containerPort: 6379
              name: redis
          env:
            - name: REDISCLI_AUTH
              valueFrom:
                secretKeyRef:
                  name: keydb-auth
                  key: password
          volumeMounts:
            - name: config
              mountPath: /etc/keydb/keydb.conf
              subPath: keydb.conf
            - name: data
              mountPath: /data
      initContainers:
        - name: config-init
          image: busybox
          command:
            - sh
            - -c
            - |
              index=$(echo $POD_NAME | awk -F'-' '{print $NF}')
              cp /template/keydb.conf.template /config/keydb.conf
              for i in $(seq 0 $((REPLICA_COUNT - 1))); do
                if [ "$i" != "$index" ]; then
                  echo "replicaof {{ include "multiactive.fullname" . }}-$i.{{ include "multiactive.fullname" . }}-headless.{{ .Release.Namespace }}.svc.cluster.local 6379" >> /config/keydb.conf
                fi
              done
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: REPLICA_COUNT
              value: "{{ .Values.replicaCount }}"
            - name: KEYDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keydb-auth
                  key: password
          volumeMounts:
            - name: config
              mountPath: /config
            - name: config-template
              mountPath: /template   
      volumes:
        - name: config
          emptyDir: {}
        - name: config-template
          configMap:
            name: {{ include "multiactive.fullname" . }}-config    
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 6Gi
